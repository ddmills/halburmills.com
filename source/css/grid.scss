//
// Config
//
$grid-maxwidth: 960px !default;
$silent-only: false !default;
$grid-gutter: 10px;

//
// Viewport mixin
//
@mixin viewport($viewport) {

    @if $viewport != default {
        $viewport: -#{$viewport};
    }

    @if $viewport == default {
        $viewport: '';
    }

    div.col#{$viewport}-1 {
        flex-basis: 8.3333333333%;
    }
    div.col#{$viewport}-2 {
        flex-basis: 16.666666666%;
    }
    div.col#{$viewport}-3 {
        flex-basis: 25%;
    }
    div.col#{$viewport}-4 {
        flex-basis: 33.333333333%;
    }
    div.col#{$viewport}-5 {
        flex-basis: 41.666666666%;
    }
    div.col#{$viewport}-6 {
        flex-basis: 50%;
    }
    div.col#{$viewport}-7 {
        flex-basis: 58.333333333%;
    }
    div.col#{$viewport}-8 {
        flex-basis: 66.666666666%;
    }
    div.col#{$viewport}-9 {
        flex-basis: 75%;
    }
    div.col#{$viewport}-10 {
        flex-basis: 83.333333333%;
    }
    div.col#{$viewport}-11 {
        flex-basis: 91.666666666%;
    }
    div.col#{$viewport}-12 {
        flex-basis: 100%;
    }

    div.col#{$viewport}-top {
        align-self: flex-start;
    }

    div.col#{$viewport}-bottom {
        align-self: flex-end;
    }

    div.col#{$viewport}-middle {
        align-self: center;
    }

    .row#{$viewport}-left {
      justify-content: flex-start;
    }
    .row#{$viewport}-right {
      justify-content: flex-end;
    }
    .row#{$viewport}-center {
      justify-content: center;
    }
    .row#{$viewport}-space-between {
      justify-content: space-between;
    }
    .row#{$viewport}-space-around {
      justify-content: space-around;
    }

    .row#{$viewport}-reverse {
        flex-direction: row-reverse;
    }

    .row#{$viewport}-equal > * {
        display: flex;
    }

    .row#{$viewport}-top {
        align-items: flex-start;
    }
    .row#{$viewport}-middle {
        align-items: center;
    }
    .row#{$viewport}-bottom {
        align-items: flex-end;
    }
    .hide#{$viewport} {
        display: none;
    }
}

/*
 * Generic grid styles
 */
%grid {
    overflow: hidden;
}

%row {
    display: flex;
    flex-wrap: wrap;
    margin: 0  -#{$grid-gutter/2} 0 -#{$grid-gutter/2};

    & > * {
        box-sizing: border-box;
        padding: 0 $grid-gutter/2 $grid-gutter;
        flex-basis: 100%;
        overflow: hidden;
    }

    &:last-child {
        margin-bottom: -#{$grid-gutter};
    }
}

%gutterless {
    & > * {
        margin: 0;

        & > * {
            padding: 0;
        }

        &:last-child {
            margin-bottom: 0;
        }
    }
}

%col {
    flex: 1 0 auto;
    position: relative;
}

@if $silent-only == false {
    .grid {
        @extend %grid;
    }

    .gutterless {
        @extend %gutterless;
    }

    .row {
        @extend %row;
    }

    .col {
        @extend %col;
    }
}

/*
 * Default view
 */
@include viewport(default);

/*
 * Small viewport (mobile)
 */
@media (min-width: $screen-sm) {
    @include viewport(sm);
}

/*
 * Medium viewport (tablets)
 */
@media (min-width: $screen-md) {
    @include viewport(md);
}

/*
 * Large viewport (desktop)
 */
@media (min-width: $screen-lg) {
    @include viewport(lg);
}